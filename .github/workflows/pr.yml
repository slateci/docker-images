# https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
name: PR - Lint, Build, and Save Container Images

on:
  pull_request:
    types: ['opened', 'edited', 'reopened', 'synchronize', 'labeled', 'unlocked']

jobs:
  main:
    runs-on: ubuntu-latest
    # Only run if we just labeled this PR with 'ok-to-test' or some update operation
    # occured and the PR has the label 'ok-to-test'.
    # PR must also be open and unlocked for any builds to occur.
    if: |
      ( (github.event.action == 'labeled' && github.event.label.name == 'ok-to-test' ) ||
        ( github.event.action != 'labeled' && contains( github.event.pull_request.labels.*.name, 'ok-to-test' ) )
      ) &&
      !github.event.pull_request.locked &&
      github.event.pull_request.closed_at == null

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install dockle
        run: |
          VERSION=$(
           curl --silent "https://api.github.com/repos/goodwithtech/dockle/releases/latest" | \
           grep '"tag_name":' | \
           sed -E 's/.*"v([^"]+)".*/\1/' \
          ) && curl -L -o dockle.deb https://github.com/goodwithtech/dockle/releases/download/v${VERSION}/dockle_${VERSION}_Linux-64bit.deb

      - name: Install trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Install hadolint
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          curl -L https://github.com/hadolint/hadolint/releases/download/v2.3.0/hadolint-Linux-x86_64 --output $GITHUB_WORKSPACE/bin/hadolint
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          chmod +x $GITHUB_WORKSPACE/bin/hadolint

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Install script dependencies
      #   run: pip3 install pyyaml

      - name: Run build.py
        run: |
          ./build.py pipeline ${{ github.event.pull_request.base.user.login }}:${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.user.login }}:${{ github.event.pull_request.head.sha }} \
          --save-images-to '_save/images.tar' \
          --check-existence 'ghcr.io/slateci/{name}:{version}' 'hub.opensciencegrid.org/slate/{name}:{version}' \
          --cache-from 'ghcr.io/slateci/{name}:{tags[]}' 'ghcr.io/slateci/{name}:PR-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.ref }}' \
          --save-tags 'ghcr.io/slateci/{name}:PR-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.ref }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_COMPARE_ENDPOINT: ${{ github.event.repository.compare_url }}

      - name: Save PR Number
        run: |
          echo ${{ github.event.number }} > ./_save/NR

      - name: Save image artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pr
          path: _save
          retention-days: 1
