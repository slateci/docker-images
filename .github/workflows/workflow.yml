name: Lint, Build, and Push Container Images

on:
  push:
    branches:
      - '**'

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        if: ${{ github.event.before != '0000000000000000000000000000000000000000' }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
        if: ${{ github.event.before == '0000000000000000000000000000000000000000' }}

      - name: Fetch commit history until ${{ github.event.before }}
        run: |
          i=1
          until git show ${{ github.event.before }} &> /dev/null
          do
            i=$((i+5))
            git fetch --depth=$i
          done
        if: ${{ github.event.before != '0000000000000000000000000000000000000000' }}

      - name: Extract branch name
        shell: bash
        id: extract_branch
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Authenticate with Github container registry
        run: echo '${{ secrets.GITHUB_TOKEN }}' | docker login https://ghcr.io -u $GITHUB_ACTOR --password-stdin

      # TODO: change Docker Hub credentials to SLATE robot account instead of
      # Emerson's personal account.
      # This is used for `docker scan`.
      - name: Authenticate with Docker Hub registry
        run: echo '${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}' | docker login https://docker.pkg.github.com -u '${{ secrets.DOCKER_HUB_USERNAME }}' --password-stdin

      - name: Authenticate with OSG Hub
        run: echo '${{ secrets.OSG_HUB_ACCESS_TOKEN }}' | docker login https://hub.opensciencegrid.org -u '${{ secrets.OSG_HUB_USERNAME }}' --password-stdin

      - name: Install hadolint
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          curl -L https://github.com/hadolint/hadolint/releases/download/v2.3.0/hadolint-Linux-x86_64 --output $GITHUB_WORKSPACE/bin/hadolint
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          chmod +x $GITHUB_WORKSPACE/bin/hadolint

      - name: Install Docker scan plugin
        run: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
          sudo apt install docker-scan-plugin -y

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Install script dependencies
      #   run: pip3 install pyyaml

      - name: Run build.py on stable
        run: ./build.py pipeline ${{ github.event.before }} ${{ github.event.after }}
        if: ${{ steps.extract_branch.outputs.branch == 'stable' }}

      - name: Run build.py on branch ${{ steps.extract_branch.outputs.branch }}
        run: ./build.py pipeline ${{ github.event.before }} ${{ github.event.after }} --ignore-version-check --branch '${{ steps.extract_branch.outputs.branch }}'
        if: ${{ steps.extract_branch.outputs.branch != 'stable' }}
