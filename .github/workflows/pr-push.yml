name: Push PR Build

on:
  workflow_run:
    workflows: ["PR - Lint, Build, and Save Container Images"]
    types:
      - completed

jobs:
  upload:
    runs-on: ubuntu-latest
    if: >
      ${{ github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Authenticate with Github container registry
        run: echo '${{ secrets.GITHUB_TOKEN }}' | docker login https://ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Authenticate with OSG Hub
        run: echo '${{ secrets.OSG_HUB_ACCESS_TOKEN }}' | docker login https://hub.opensciencegrid.org -u '${{ secrets.OSG_HUB_USERNAME }}' --password-stdin

      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });

            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];

            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });

            var fs = require('fs');
            fs.writeFileSync('${{ github.workspace }}/pr.zip', Buffer.from(download.data));

      - run: unzip pr.zip

      - name: Push images
        id: push-tags
        shell: bash
        run: |
          set -x
          tags=""
          delim=""

          for tb in *; do
            if [[ "$tb" == 'NR' ]]; then
              continue
            fi

            tags+="$delim"
            delim=" "
            tags+=$(docker load -i "$img" | sed 's/Loaded image: //' | tr '\n' ' ')
          done

          echo "$tags" | xargs docker push || exit 1
          echo "::set-output name=TAGS::${tags}"

      - name: 'Comment on PR'
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var fs = require('fs');
            var issue_number = Number(fs.readFileSync('./NR'));

            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: 'PR successfully built!\nThe following tags were pushed: ${{ steps.push-tags.outputs.TAGS}}'
            });
